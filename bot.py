import logging
from telegram import Bot, Update, ReplyKeyboardMarkup, InlineKeyboardMarkup, InlineKeyboardButton, KeyboardButton
from telegram.ext import ApplicationBuilder, ContextTypes, CommandHandler, MessageHandler, filters, CallbackQueryHandler, CallbackContext
import tracemalloc
tracemalloc.start()

state = {}

BOT_TOKEN = '5921193873:AAFtVwAzegmN6G9USoetSEVV7NoSW-BFJRM'
ADMIN_ID = [1194700554]

course = 2.17
course_usdt = 33.08
marje = 1.1

selected_user_id = None
selected_chat_id = None

logging.basicConfig(
    format='%(asctime)s - %(name)s - %(levelname)s - %(message)s',
    level=logging.INFO
)

async def user_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.message.from_user.id
    if user_id in ADMIN_ID:
        # –°–æ—Ö—Ä–∞–Ω–∏—Ç–µ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_id = update.message.text.split('/user ')[1]
        global selected_user_id
        selected_user_id = user_id
        await update.message.reply_text(f'–í—ã–±—Ä–∞–Ω –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —Å –∏–¥–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ç–æ—Ä–æ–º {selected_user_id}. –¢–µ–ø–µ—Ä—å –≤—ã –º–æ–∂–µ—Ç–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ.')
    else:
        await update.message.reply_text('–ò–∑–≤–∏–Ω–∏—Ç–µ, –≤—ã –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ã.')



async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = update.effective_user.id
    if user_id in ADMIN_ID:
        #admin panel
        keyboard = ReplyKeyboardMarkup(
            [['–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å —Ä—É–±–ª—è', '–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USDT'], ["–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –º–∞—Ä–∂–∏", '–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å'], ['–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å —é–∑–µ—Ä–æ–º']],
            resize_keyboard=True
        )
        await context.bot.send_message(chat_id=update.effective_chat.id, text='–ü—Ä–∏–≤–µ—Ç, –∞–¥–º–∏–Ω!', reply_markup=keyboard)


    else:
        keyboard = ReplyKeyboardMarkup(
            [['1000', '2000'], ['3000', '4000'], ['–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å']],
            resize_keyboard=True
        )

        await context.bot.send_message(chat_id=update.effective_chat.id, text="–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –û–±–º–µ–Ω–Ω–∏–∫ USDT to Bat ! \n–ó–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ –æ–±–º–µ–Ω—è—Ç—å —Ä—É–±–ª–∏ –Ω–∞ —Ç–∞–π—Å–∫–∏–µ –±–∞—Ç—ã –ø–æ –≤—ã–≥–æ–¥–Ω–æ–º—É –∫—É—Ä—Å—Éüëå \n‚úÖ –í—ã –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç–µ —Ä—É–±–ª–∏ –Ω–∞ –∫–∞—Ä—Ç—É Tinkoff, –°–±–µ—Ä –∏–ª–∏ –ø–æ –°–ë–ü –∏ –ø–æ–ª—É—á–∞–µ—Ç–µ –±–∞—Ç—ã: \nüí≥ –Ω–∞ —Ç–∞–π—Å–∫—É—é –∫–∞—Ä—Ç—É \nüõµ –∫—É—Ä—å–µ—Ä –ø—Ä–∏–≤–µ–∑–µ—Ç –≤–∞–º –Ω–∞–ª–∏—á–Ω—ã–µ \nüå¥ –≤ –ü–∞—Ç—Ç–∞–π–µüèß –≤ –ª—é–±–æ–º –±–ª–∏–∂–∞–π—à–µ–º –±–∞–Ω–∫–æ–º–∞—Ç–µ –ë–∞–Ω–≥–∫–æ–∫ –ë–∞–Ω–∫–∞, –ö–∞—Å–∏–∫–æ—Ä–Ω–∞, –ö—É–Ω–≥—Å—Ä–∏üèò –≤–æ–∑–º–æ–∂–Ω–∞ –æ–ø–ª–∞—Ç–∞ –∂–∏–ª—å—è —á–µ—Ä–µ–∑ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã–µ –≤ –†–§ —Å–µ—Ä–≤–∏—Å—ã \n–ö—É—Ä—Å —Ä–∞—Å—Å—á–∏—Ç—ã–≤–∞–µ—Ç—Å—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ –≤ —Ä–µ–∂–∏–º–µ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –≤—Ä–µ–º–µ–Ω–∏ –∏ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç —Å—É–º–º—ã –æ–±–º–µ–Ω–∞. \n–ü–æ–¥—Ä–æ–±–Ω–µ–µ –æ –ø—Ä–æ—Ü–µ—Å—Å–µ –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å, –æ—Ç–ø—Ä–∞–≤–∏–≤ –±–æ—Ç—É –∫–æ–º–∞–Ω–¥—É /info–í–≤–µ–¥–∏—Ç–µ —Å—É–º–º—É –≤ –±–∞—Ç–∞—Ö, –∫–æ—Ç–æ—Ä–∞—è –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–∞, –∏–ª–∏ –≤—ã–±–µ—Ä–µ—Ç–µ –ø—Ä–∏ –ø–æ–º–æ—â–∏ –∫–Ω–æ–ø–æ–∫: ‚¨á", reply_markup=keyboard)

async def handle_message(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    global selected_user_id
    user_id = update.effective_user.id
    if user_id in ADMIN_ID:
        # admin panel
        if text == "–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å —Ä—É–±–ª—è":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞'
            state[user_id] = '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ —Ä—É–±–ª—è'
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
            await context.bot.send_message(chat_id=update.effective_chat.id, text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ —Ä—É–±–ª—è (–≤ —Ä—É–±–ª—è—Ö):")

        elif user_id in state and state[user_id] == '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ —Ä—É–±–ª—è':
            if text == "–û—Ç–º–µ–Ω–∞":
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö—É—Ä—Å –Ω–µ –∏–∑–º–µ–Ω–µ–Ω, –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É –†–£–ë: {course} —Ä—É–±.")
                del state[user_id]
                return
            
            try:
                set_course(float(text))
                # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ö—É—Ä—Å –∏–∑–º–µ–Ω–µ–Ω")
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                del state[user_id]

            except ValueError:
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞.")
                

        if text == "–ò–∑–º–µ–Ω–∏—Ç—å –∫—É—Ä—Å USDT":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞'
            state[user_id] = '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ usdt'
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
            await context.bot.send_message(chat_id=update.effective_chat.id, text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ USDT (–≤ USDT):")

        elif user_id in state and state[user_id] == '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞ usdt':
            if text == "–û—Ç–º–µ–Ω–∞":
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö—É—Ä—Å –Ω–µ –∏–∑–º–µ–Ω–µ–Ω, –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É USDT: {course_usdt} USDT")
                del state[user_id]
                return
            
            try:
                set_course_usdt(float(text))
                # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ö—É—Ä—Å –∏–∑–º–µ–Ω–µ–Ω")
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                del state[user_id]

            except ValueError:
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞.")
                
            
        if text == "–ò–∑–º–µ–Ω–∏—Ç—å –ø—Ä–æ—Ü–µ–Ω—Ç –º–∞—Ä–∂–∏":
            # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –≤ '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞'
            state[user_id] = '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Ä–∂–∏'
            # –ó–∞–ø—Ä–∞—à–∏–≤–∞–µ–º —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
            await context.bot.send_message(chat_id=update.effective_chat.id, text="–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ–Ω—Ç–∞ –º–∞—Ä–∂–∏ (–≤ –ø—Ä–æ—Ü–µ–Ω—Ç–∞—Ö):")

        elif user_id in state and state[user_id] == '–æ–∂–∏–¥–∞–Ω–∏–µ —á–∏—Å–ª–∞ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –º–∞—Ä–∂–∏':
            if text == "–û—Ç–º–µ–Ω–∞":
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö—É—Ä—Å –Ω–µ –∏–∑–º–µ–Ω–µ–Ω, –ø–æ –ø—Ä–µ–∂–Ω–µ–º—É {marje*100} % || {marje}")
                del state[user_id]
                return
            
            try:
                set_marje(float(text))
                # –í—ã–ø–æ–ª–Ω—è–µ–º –¥–µ–π—Å—Ç–≤–∏—è –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ö—É—Ä—Å –∏–∑–º–µ–Ω–µ–Ω")
                # –°–±—Ä–∞—Å—ã–≤–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ
                del state[user_id]

            except ValueError:
                await context.bot.send_message(chat_id=update.effective_chat.id, text="–ù–µ–∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–µ —á–∏—Å–ª–æ. –í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –¥–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫—É—Ä—Å–∞.–ò–ª–∏ –Ω–∞–ø–∏—à–∏—Ç–µ –û—Ç–º–µ–Ω–∞.")
                
                
        ##–î–ª—è –∞–¥–º–∏–Ω–æ–≤
        if text == "–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å":
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö—É—Ä—Å —Å Bitazza USDT  : {course_usdt} \n–ö—É—Ä—Å —Å –º–∞—Ä–∂–æ–π USDT: {course_usdt*marje} \n–ö—É—Ä—Å —Ä—É–± : {course} —Ä—É–±. \n –ö—É—Ä—Å —Å –º–∞—Ä–∂–æ–π —Ä—É–±: {course*marje} \n –ü—Ä–æ—Ü–µ–Ω—Ç –º–∞—Ä–∂–∏ : {round((marje*100),2)} % || {marje}")
            return
        
        if text == "–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø–µ—Ä–µ–ø–∏—Å–∫—É —Å —é–∑–µ—Ä–æ–º":
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ü–µ—Ä–µ–∏—Å–∫–∞ —Å —é–∑–µ—Ä–æ–º {selected_user_id} –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞")
            selected_user_id = None
            return
        
        
        if selected_user_id:
            await context.bot.get_chat(selected_user_id).send(f'–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {text}')
            
            await context.bot.send_message(chat_id=selected_chat_id, text=f'–û—Ç–≤–µ—Ç –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä–∞: {text}')




    

    if user_id not in ADMIN_ID:
    
        if text == "–£–∑–Ω–∞—Ç—å –∫—É—Ä—Å":
            await context.bot.send_message(chat_id=update.effective_chat.id, text=f"–ö—É—Ä—Å USDT : {course_usdt} USDT \n–ö—É—Ä—Å —Ä—É–± : {course} —Ä—É–±.")
            return

        else:
        # –ö–æ–Ω–≤–µ—Ä—Ç–∞—Ü–∏—è –≤ –±–∞—Ç—ã
            bat = int(text)
            print(bat)
            rub = (bat) * (course)
            usdt = round((bat)/course_usdt, 2)
            print(rub)

            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–Ω–æ–ø–∫–∏ "–ó–∞–ø—Ä–æ—Å–∏—Ç—å"
            request_button = InlineKeyboardButton('–ó–∞–ø—Ä–æ—Å–∏—Ç—å', callback_data="request")

            # –°–æ–∑–¥–∞–Ω–∏–µ –∫–ª–∞–≤–∏–∞—Ç—É—Ä—ã —Å –∫–Ω–æ–ø–∫–æ–π "–ó–∞–ø—Ä–æ—Å–∏—Ç—å"
            keyboard = InlineKeyboardMarkup([[request_button]])

            await context.bot.send_message(chat_id=update.effective_chat.id, text=f'–î–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è {bat} –±–∞—Ç, –≤–∞–º –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ {rub} —Ä—É–±. ({usdt} USDT)\n–†–∞—Å—á—ë—Ç –≤–µ–¥–µ—Ç—Å—è –ø–æ –∫—É—Ä—Å—É {course} (USDT: {course_usdt})', reply_markup=keyboard)

            location_button = KeyboardButton("–û—Ç–ø—Ä–∞–≤–∏—Ç—å –º–µ—Å—Ç–æ–ø–æ–ª–æ–∂–µ–Ω–∏–µ", request_location=True)

            keyboard = ReplyKeyboardMarkup([[location_button]])

            return

def set_course(new_course):
    global course
    course = new_course

def set_course_usdt(new_course):
    global course_usdt
    course_usdt = new_course

def set_marje(new_course):
    global marje
    marje = (new_course/100)+1


async def button_callback(update: Update, context: CallbackContext, *args, **kwargs):
    query = update.callback_query
    # –ü–æ–ª—É—á–∞–µ–º callback_data –∏–∑ –Ω–∞–∂–∞—Ç–æ–π –∫–Ω–æ–ø–∫–∏
    callback_data = update.callback_query.data

    if callback_data == 'request':
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –±–∞—Ç
        await context.bot.send_message(chat_id=query.message.chat_id, text="–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –æ–∂–∏–¥–∞–π—Ç–µ, –æ–ø–µ—Ä–∞—Ç–æ—Ä —Å –≤–∞–º–∏ —Å–≤—è–∂–µ—Ç—Å—è")

        mess = f'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å @{query.from_user.username} –∑–∞–ø—Ä–æ—Å–∏–ª: \n\n{query.message.text}'
        await context.bot.send_message(chat_id=ADMIN_ID, text=mess)
    
    return True


async def handle_geo(update: Update, context: CallbackContext):
    location = update.message.location
    await context.bot.send_message(chat_id=ADMIN_ID, text=f'Latitude: {location.latitude}, Longitude: {location.longitude}')

        
async def error_handler(update, context):
    # Log the error or handle it in some way
    print(f"An error occurred: {context.error}")

if __name__ == '__main__':
    application = ApplicationBuilder().token(BOT_TOKEN).build()

    application.add_handler(CallbackQueryHandler(button_callback))

    start_handler = CommandHandler('start', start)
    application.add_handler(start_handler)

    user_handler = CommandHandler('user', user_message)
    application.add_handler(user_handler)

    message_handler = MessageHandler(filters.TEXT, handle_message)
    application.add_handler(message_handler)

    geo_handler = MessageHandler(filters.LOCATION, handle_geo)
    application.add_handler(geo_handler)

    application.add_handler(CallbackQueryHandler(button_callback))


    application.run_polling()